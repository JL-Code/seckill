// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecKill.Infrastructure;

namespace SecKill.Migrations.MySQLMigrations
{
    [DbContext(typeof(MysqlDbContext))]
    partial class MysqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("SecKill.Domain.AggregatesModel.Goods", b =>
                {
                    b.Property<byte[]>("GoodsId")
                        .ValueGeneratedOnAdd()
                        .HasConversion(new ValueConverter<byte[], byte[]>(v => default(byte[]), v => default(byte[]), new ConverterMappingHints(size: 16)));

                    b.Property<string>("GoodsName");

                    b.Property<string>("Img");

                    b.Property<double>("Price");

                    b.Property<int>("StockCount");

                    b.HasKey("GoodsId");

                    b.ToTable("Goods");

                    b.HasData(
                        new
                        {
                            GoodsId = new byte[] { 226, 173, 102, 178, 131, 255, 211, 68, 170, 96, 18, 138, 177, 125, 191, 67 },
                            GoodsName = "华为（HUAWEI） mate20pro手机 馥蕾红 8G+256G 全网通（UD屏内指纹版）",
                            Img = "https://res.vmallres.com/pimages//product/6901443281213/800_800_1546486249080mp.png",
                            Price = 5999.0,
                            StockCount = 10
                        });
                });

            modelBuilder.Entity("SecKill.Domain.AggregatesModel.SeckillGoods", b =>
                {
                    b.Property<byte[]>("SeckillGoodsId")
                        .ValueGeneratedOnAdd()
                        .HasConversion(new ValueConverter<byte[], byte[]>(v => default(byte[]), v => default(byte[]), new ConverterMappingHints(size: 16)));

                    b.Property<DateTime>("EndDate");

                    b.Property<byte[]>("GoodsId")
                        .IsRequired()
                        .HasConversion(new ValueConverter<byte[], byte[]>(v => default(byte[]), v => default(byte[]), new ConverterMappingHints(size: 16)));

                    b.Property<string>("GoodsName");

                    b.Property<string>("Img");

                    b.Property<int>("Quantity");

                    b.Property<double>("SeckillPrice");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("SeckillGoodsId");

                    b.ToTable("SeckillGoods");

                    b.HasData(
                        new
                        {
                            SeckillGoodsId = new byte[] { 178, 87, 221, 178, 245, 39, 27, 65, 182, 66, 139, 166, 56, 252, 153, 175 },
                            EndDate = new DateTime(2019, 2, 22, 14, 30, 15, 842, DateTimeKind.Local).AddTicks(1990),
                            GoodsId = new byte[] { 226, 173, 102, 178, 131, 255, 211, 68, 170, 96, 18, 138, 177, 125, 191, 67 },
                            GoodsName = "华为（HUAWEI） mate20pro手机 馥蕾红 8G+256G 全网通（UD屏内指纹版）",
                            Img = "https://res.vmallres.com/pimages//product/6901443281213/800_800_1546486249080mp.png",
                            Quantity = 10,
                            SeckillPrice = 9.9000000000000004,
                            StartDate = new DateTime(2019, 2, 22, 13, 30, 15, 846, DateTimeKind.Local).AddTicks(2340)
                        });
                });

            modelBuilder.Entity("SecKill.Domain.AggregatesModel.SeckillOrder", b =>
                {
                    b.Property<byte[]>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasConversion(new ValueConverter<byte[], byte[]>(v => default(byte[]), v => default(byte[]), new ConverterMappingHints(size: 16)));

                    b.Property<string>("Address");

                    b.Property<byte[]>("GoodsId")
                        .IsRequired()
                        .HasConversion(new ValueConverter<byte[], byte[]>(v => default(byte[]), v => default(byte[]), new ConverterMappingHints(size: 16)));

                    b.Property<string>("GoodsName");

                    b.Property<double>("GoodsPrice");

                    b.Property<DateTime>("OrderDate");

                    b.Property<int>("OrderState");

                    b.Property<string>("PaymentTerms");

                    b.Property<int>("Quantity");

                    b.HasKey("OrderId");

                    b.ToTable("SeckillOrder");
                });

            modelBuilder.Entity("SecKill.Domain.AggregatesModel.User", b =>
                {
                    b.Property<byte[]>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasConversion(new ValueConverter<byte[], byte[]>(v => default(byte[]), v => default(byte[]), new ConverterMappingHints(size: 16)));

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = new byte[] { 70, 135, 65, 248, 70, 83, 199, 71, 170, 225, 173, 46, 169, 98, 65, 131 },
                            Address = "长江国际",
                            Password = "1",
                            UserName = "jiangy"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
